services:
  postgresql:
    image: docker.io/library/postgres:16-alpine # https://docs.goauthentik.io/docs/developer-docs/setup/full-dev-environment
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - ~/data/authentik/postgresql:/var/lib/postgresql/data
    env_file:
      - ~/config/authentik/postgresql.env
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    user: "1000:1000"

  redis:
    image: docker.io/library/redis:7 # https://docs.goauthentik.io/docs/developer-docs/setup/full-dev-environment
    volumes:
      - ~/data/authentik/redis:/data
    command: --save 60 1 --loglevel warning
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    user: "1000:1000"

  server:
    image: &authentik_image ghcr.io/goauthentik/server:2025.8.4
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ~/repository/nana4-net/authentik/assets:/web/dist/assets/custom
      - ~/data/authentik/media:/media
      - ~/data/authentik/custom-templates:/templates
    env_file:
      - ~/config/authentik/app.env
    ports:
      - '9443:9443'
    command: server
    restart: always

  worker:
    image: *authentik_image
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/data/authentik/media:/media
      - ~/data/authentik/custom-templates:/templates
    env_file:
      - ~/config/authentik/app.env
    command: worker
    restart: always
